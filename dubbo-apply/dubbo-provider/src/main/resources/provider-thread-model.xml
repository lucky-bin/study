<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd        
    	http://dubbo.apache.org/schema/dubbo        
    	http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="hello-world-app">
        <dubbo:parameter key="qos.enable" value="false"/>
        <dubbo:parameter key="qos.accept.foreign.ip" value="false"/>
        <dubbo:parameter key="qos.port" value="33333"/>
    </dubbo:application>

    <!-- 使用zk注册中心暴露服务地址 -->
    <dubbo:registry address="zookeeper://127.0.0.1:2181" dynamic="false"/>


    <!-- 用dubbo协议在20880端口暴露服务 -->
    <!-- 将所有的消息都派遣给业务线程，业务线程池固定10个线程 -->
    <dubbo:protocol name="dubbo" port="20880" dispatcher="all" threadpool="fixed" threads="10"/>
    <!-- 将所有的消息都派遣给IO线程，业务线程池固定10个线程 -->
    <!--<dubbo:protocol name="dubbo" port="20880" dispatcher="direct" threadpool="fixed" threads="10"/>-->
    <!-- 心跳网络事件给IO线程处理，将业务请求的消息都派遣给业务线程，业务线程池使用缓存策略  -->
    <!--<dubbo:protocol name="dubbo" port="20880" dispatcher="message" threadpool="fixed" threads="10"/>-->
    <!-- 只请求消息派发到线程池，不含响应，响应和其它连接断开事件，心跳等消息，直接在 IO 线程上执行  -->
    <!--<dubbo:protocol name="dubbo" port="20880" dispatcher="execution" threadpool="fixed" threads="10"/>-->
    <!-- 在 IO 线程上，将连接断开事件放入队列，有序逐个执行，其它消息派发到线程池。  -->
    <!--<dubbo:protocol name="dubbo" port="20880" dispatcher="connection" threadpool="cached" accepts="10"/>-->

    <!-- 声明需要暴露的服务接口 每个方法，每客户端并发执行（或占用连接的请求数）不能超过 10 个   actives="10"-->
    <dubbo:service interface="com.example.study.apply.facade.OrderService"
            ref="orderService" timeout="2000" executes="10" actives="10"/>

    <!-- 和本地bean一样实现服务 -->
    <bean id="orderService" class="com.example.study.apply.provider.OrderServiceImpl"/>
</beans>